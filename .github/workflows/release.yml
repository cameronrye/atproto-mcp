name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write # Required for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm run type-check

      - name: Lint
        run: pnpm run lint

      - name: Run tests with coverage
        run: pnpm run test:coverage

      - name: Build
        run: pnpm run build

      - name: Verify package contents
        run: |
          echo "Package contents:"
          pnpm pack --dry-run

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Verify package.json version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$PACKAGE_VERSION" != "${{ steps.version.outputs.version }}" ]; then
            echo "Error: package.json version ($PACKAGE_VERSION) does not match tag version (${{ steps.version.outputs.version }})"
            exit 1
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from git commits
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
            git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
          else
            echo "- Initial release" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## AT Protocol MCP Server ${{ steps.version.outputs.version }}

            ### Changes
            ${{ steps.changelog.outputs.CHANGELOG }}

            ### Installation
            ```bash
            npm install -g atproto-mcp@${{ steps.version.outputs.version }}
            ```

            ### Quick Start
            ```bash
            # Start in unauthenticated mode (works immediately!)
            atproto-mcp
            ```

            For more information, see the [documentation](https://cameronrye.github.io/atproto-mcp).
          draft: false
          prerelease: ${{ contains(steps.version.outputs.version, '-') }}
          files: |
            dist/**/*

      - name: Publish to npm
        run: pnpm publish --no-git-checks --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build documentation
        run: pnpm run docs:build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
