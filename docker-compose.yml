version: '3.8'

services:
  atproto-mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: atproto-mcp-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - ATPROTO_SERVICE=https://bsky.social
      # Authentication is optional - server works in unauthenticated mode by default
      # Set these via .env file or environment variables to enable authentication
      # - ATPROTO_IDENTIFIER=your.handle
      # - ATPROTO_PASSWORD=your-app-password
      # - ATPROTO_AUTH_METHOD=app-password
      # - OAUTH_CLIENT_ID=your-oauth-client-id
      # - OAUTH_CLIENT_SECRET=your-oauth-client-secret
      # - OAUTH_REDIRECT_URI=http://localhost:3000/oauth/callback
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config/production.json:/app/config/production.json:ro
    networks:
      - atproto-network
    healthcheck:
      test: ["CMD", "node", "dist/health-check.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: atproto-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - atproto-network
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: atproto-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - atproto-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: atproto-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      # SECURITY WARNING: Change the default admin password before deploying to production!
      # Set GRAFANA_ADMIN_PASSWORD environment variable or update this value
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-changeme}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - atproto-network

networks:
  atproto-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
